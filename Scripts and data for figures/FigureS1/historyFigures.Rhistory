theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")
dataGO_MF_g2$tissue <- factor(dataGO_MF_g2$tissue, levels=c("Head" ,"Gut","Ovary"))
ggplot(dataGO_MF_g2, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")
GO_MF_g2_plot <-ggplot(dataGO_MF_g2, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))  +
theme(strip.background.x = element_blank(),strip.text.x = element_blank())
GO_MF_g2_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, GO_MF_plot, GO_MF_g1_plot, GO_MF_g2_plot, ncol=1, align = 'v', axis = 'l', labels=c("A","","","B","",""), label_size=18, rel_heights = c(1.2, 0.4,1.3,1,0.4,1))
dataGO_BP_g1
dataGO_BP_g1$classification <- "Overlap\n & AS ins"
GO_BP_g1_plot <-ggplot(dataGO_BP_g1, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=map_color) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(strip.background.x = element_blank(),strip.text.x = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_BP_g1_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, GO_MF_plot, GO_MF_g1_plot, GO_MF_g2_plot, ncol=1, align = 'v', axis = 'l', labels=c("A","","","B","",""), label_size=18, rel_heights = c(1.2, 0.4,1.3,1,0.4,1))
dataGO_MF_g1$classification <-  "Overlap\n & AS ins"
GO_MF_g1_plot <-ggplot(dataGO_MF_g1, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(strip.background.x = element_blank(),strip.text.x = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_g1_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, GO_MF_plot, GO_MF_g1_plot, GO_MF_g2_plot, ncol=1, align = 'v', axis = 'l', labels=c("A","","","B","",""), label_size=18, rel_heights = c(1.2, 0.4,1.3,1,0.4,1))
setwd("/run/user/1000/gvfs/sftp:host=marvin.s.upf.edu,user=mcoronado/gpfs42/robbyfs/homes/users/mcoronado/scratch/5GenomesProject/ANALYSES/trinity-repeatMasker/FIGURES/Figure6")
ggsave("Figure6_3.png", height = 12, width = 13)
ggsave("Figure6_3.pdf", height = 12, width = 13)
ggsave("Figure6_3.png", height = 12.5, width = 13)
ggsave("Figure6_3.png", height = 13, width = 13)
dataGO_MF_g1$classification <-  "Overlap\n & AS"
GO_MF_g1_plot <-ggplot(dataGO_MF_g1, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(strip.background.x = element_blank(),strip.text.x = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_g1_plot
dataGO_BP_g1$classification <- "Overlap\n & AS"
GO_BP_g1_plot <-ggplot(dataGO_BP_g1, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=map_color) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(strip.background.x = element_blank(),strip.text.x = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_BP_g1_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, GO_MF_plot, GO_MF_g1_plot, GO_MF_g2_plot, ncol=1, align = 'v', axis = 'l', labels=c("A","","","B","",""), label_size=18, rel_heights = c(1.2, 0.4,1.3,1,0.4,1))
ggsave("Figure6_3.png", height = 12, width = 13)
ggsave("Figure6_3.pdf", height = 12, width = 13)
View(dataGO_BP)
map_color
map_color_mf
color_map_mf
dput(map_color)
dataGO_BP[dataGO_BP$shortName=="Transcription",]$type
dataGO_BP_g2[dataGO_BP_g2$shortName=="Transcription",]$type
dataGO_BP[dataGO_BP$shortName=="Regulation of metabolism",]$type <- "Metabolism"
dataGO_BP_g2[dataGO_BP_g2$shortName=="Transcription",]$type
dput(color_map_mf)
color_map_mf<-c(`DNA binding` = #ffffbf", `Transmembrane transporter activity` = "#FFFF33",
`Enzyme activator activity` = "#A65628", Transcription = "#999999",
color_map_mf<-c(`DNA binding` = "#ffffbf", `Transmembrane transporter activity` = "#FFFF33",
`Enzyme activator activity` = "#A65628", Transcription = "#999999",
`Ion binding` = "#F781BF")
map_color <- c("Development" = "#E41A1C", "Regulation" = "#377EB8", "Metabolism" = "#4DAF4A", "Component" = "#984EA3", "Transcription" = "#ff7f00")
GO_BP_plot <-ggplot(dataGO_BP, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=map_color) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_BP_plot
dataGO_BP_g1$classification <- "Overlap\n & AS"
GO_BP_g1_plot <-ggplot(dataGO_BP_g1, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=map_color) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(strip.background.x = element_blank(),strip.text.x = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_BP_g1_plot
dataGO_BP_g2$tissue <- factor(dataGO_BP_g2$tissue, levels=c("Head", "Gut", "Ovary"))
GO_BP_g2_plot <-ggplot(dataGO_BP_g2, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=map_color) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))  +
theme(strip.background.x = element_blank(),strip.text.x = element_blank())
GO_BP_g2_plot
color_map_mf<-c(`DNA binding` = "#ffffbf", `Transmembrane transporter activity` = "#FFFF33",
`Enzyme activator activity` = "#A65628", Transcription = "#999999",
`Ion binding` = "#F781BF")
GO_MF_plot <-ggplot(dataGO_MF, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_plot
dataGO_MF_g1$tissue <- factor(dataGO_MF_g1$tissue, levels=c("Head" ,"Gut","Ovary"))
dataGO_MF_g1$classification <-  "Overlap\n & AS"
GO_MF_g1_plot <-ggplot(dataGO_MF_g1, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(strip.background.x = element_blank(),strip.text.x = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_g1_plot
dataGO_MF_g2$tissue <- factor(dataGO_MF_g2$tissue, levels=c("Head" ,"Gut","Ovary"))
GO_MF_g2_plot <-ggplot(dataGO_MF_g2, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))  +
theme(strip.background.x = element_blank(),strip.text.x = element_blank())
GO_MF_g2_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, GO_MF_plot, GO_MF_g1_plot, GO_MF_g2_plot, ncol=1, align = 'v', axis = 'l', labels=c("A","","","B","",""), label_size=18, rel_heights = c(1.2, 0.4,1.3,1,0.4,1))
dataGO_BP$shortName
dataGO_BP[dataGO_BP$shortName=="Positive regulation of RNA transcription, metabolism",]$type <- "Metabolism"
dataGO_BP_g1[dataGO_BP_g1$shortName=="Regulation of metabolism",]$type <- "Metabolism"
dataGO_BP_g1[dataGO_BP_g1$shortName=="Positive regulation of metabolism",]$type <- "Metabolism"
map_color <- c("Development" = "#E41A1C", "Regulation" = "#377EB8", "Metabolism" = "#4DAF4A", "Component" = "#984EA3", "Transcription" = "#ff7f00")
map_color <- c("Development" = "#E41A1C", "Regulation" = "#377EB8", "Metabolism" = "#4DAF4A", "Component" = "#984EA3", "Transcription" = "#ff7f00")
GO_BP_plot <-ggplot(dataGO_BP, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=map_color) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_BP_plot
dataGO_BP_g1$classification <- "Overlap\n & AS"
dataGO_BP_g1[dataGO_BP_g1$shortName=="Regulation of metabolism",]$type <- "Metabolism"
dataGO_BP_g1[dataGO_BP_g1$shortName=="Positive regulation of metabolism",]$type <- "Metabolism"
GO_BP_g1_plot <-ggplot(dataGO_BP_g1, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=map_color) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(strip.background.x = element_blank(),strip.text.x = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_BP_g1_plot
dataGO_BP_g2$tissue <- factor(dataGO_BP_g2$tissue, levels=c("Head", "Gut", "Ovary"))
GO_BP_g2_plot <-ggplot(dataGO_BP_g2, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=map_color) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))  +
theme(strip.background.x = element_blank(),strip.text.x = element_blank())
GO_BP_g2_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, nrow=3, align = 'v', axis = 'l', rel_heights = c(0.8,0.3,1))
dataGO_BP_g1
View(dataGO_BP_g1)
View(dataGO_BP_g2)
dataGO_BP_g2[dataGO_BP_g2$shortName=="Regulation of metabolism",]$type <- "Metabolism"
dataGO_BP_g2[dataGO_BP_g2$shortName=="Positive regulation of metabolism",]$type <- "Metabolism"
dataGO_BP_g2[dataGO_BP_g2$shortName=="Transcription",]$type <- "Transcription"
GO_BP_g2_plot <-ggplot(dataGO_BP_g2, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=map_color) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))  +
theme(strip.background.x = element_blank(),strip.text.x = element_blank())
GO_BP_g2_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, nrow=3, align = 'v', axis = 'l', rel_heights = c(0.8,0.3,1))
color_map_mf<-c(`DNA binding` = "#fee08b", `Transmembrane transporter activity` = "#99d594",
`Enzyme activator activity` = "#A65628", Transcription = "#999999",
`Ion binding` = "#F781BF")
GO_MF_plot <-ggplot(dataGO_MF, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_plot
dataGO_MF_g1$tissue <- factor(dataGO_MF_g1$tissue, levels=c("Head" ,"Gut","Ovary"))
dataGO_MF_g1$classification <-  "Overlap\n & AS"
GO_MF_g1_plot <-ggplot(dataGO_MF_g1, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(strip.background.x = element_blank(),strip.text.x = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_g1_plot
dataGO_MF_g2$tissue <- factor(dataGO_MF_g2$tissue, levels=c("Head" ,"Gut","Ovary"))
GO_MF_g2_plot <-ggplot(dataGO_MF_g2, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))  +
theme(strip.background.x = element_blank(),strip.text.x = element_blank())
GO_MF_g2_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, GO_MF_plot, GO_MF_g1_plot, GO_MF_g2_plot, ncol=1, align = 'v', axis = 'l', labels=c("A","","","B","",""), label_size=18, rel_heights = c(1.2, 0.4,1.3,1,0.4,1))
View(dataGO_MF[,c("shortName","type")])
View(dataGO_MF[,c("shortName","type")])
Ion channel activity
dataGO_MF[dataGO_MF$shortName=="Ion channel activity",]$shortName
dataGO_MF[dataGO_MF$shortName=="Ion channel activity",]$shortName <- "Transmembrane transporter activty"
View(dataGO_MF_g1[,c("shortName","type")])
View(dataGO_MF_g2[,c("shortName","type")])
dataGO_MF_g2$shortName
dataGO_MF_g2[dataGO_MF_g2$shortName=="Ion transport",]$shortName
dataGO_MF_g2[dataGO_MF_g2$shortName=="Ion transport",]$shortName <- "Transmembrane transporter activty"
dataGO_MF_g2[dataGO_MF_g2$type =="Ion transport",]$type <- "Transmembrane transporter activity"
color_map_mf
GO_MF_plot <-ggplot(dataGO_MF, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_plot
dataGO_MF_g1$tissue <- factor(dataGO_MF_g1$tissue, levels=c("Head" ,"Gut","Ovary"))
dataGO_MF_g1$classification <-  "Overlap\n & AS"
GO_MF_g1_plot <-ggplot(dataGO_MF_g1, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(strip.background.x = element_blank(),strip.text.x = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_g1_plot
dataGO_MF_g2$tissue <- factor(dataGO_MF_g2$tissue, levels=c("Head" ,"Gut","Ovary"))
GO_MF_g2_plot <-ggplot(dataGO_MF_g2, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))  +
theme(strip.background.x = element_blank(),strip.text.x = element_blank())
GO_MF_g2_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, GO_MF_plot, GO_MF_g1_plot, GO_MF_g2_plot, ncol=1, align = 'v', axis = 'l', labels=c("A","","","B","",""), label_size=18, rel_heights = c(1.2, 0.4,1.3,1,0.4,1))
dataGO_MF$shortName
dataGO_MF$shortName
levels(dataGO_MF$shortName)
dataGO_MF$shortName <- factor(dataGO_MF$shortName, levels=c("Sequence-specific DNA binding", "RNA polymerase II transcription", "GTPase activator", "Nucleic acid binding" , "Ion binding", "Transcription regulatory region DNA binding","Transmembrane transporter activty"  , "Transcription factor activity"       ))
GO_MF_plot <-ggplot(dataGO_MF, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_plot
dataGO_MF_g1$tissue <- factor(dataGO_MF_g1$tissue, levels=c("Head" ,"Gut","Ovary"))
dataGO_MF_g1$classification <-  "Overlap\n & AS"
GO_MF_g1_plot <-ggplot(dataGO_MF_g1, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(strip.background.x = element_blank(),strip.text.x = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_g1_plot
dataGO_MF_g2$tissue <- factor(dataGO_MF_g2$tissue, levels=c("Head" ,"Gut","Ovary"))
GO_MF_g2_plot <-ggplot(dataGO_MF_g2, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))  +
theme(strip.background.x = element_blank(),strip.text.x = element_blank())
GO_MF_g2_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, GO_MF_plot, GO_MF_g1_plot, GO_MF_g2_plot, ncol=1, align = 'v', axis = 'l', labels=c("A","","","B","",""), label_size=18, rel_heights = c(1.2, 0.4,1.3,1,0.4,1))
GO_MF_plot
dataGO_MF$shortName <- factor(dataGO_MF$shortName, levels=rec(c("Sequence-specific DNA binding", "RNA polymerase II transcription", "GTPase activator", "Nucleic acid binding" , "Ion binding", "Transcription regulatory region DNA binding","Transmembrane transporter activty"  , "Transcription factor activity"       )))
GO_MF_plot <-ggplot(dataGO_MF, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, GO_MF_plot, GO_MF_g1_plot, GO_MF_g2_plot, ncol=1, align = 'v', axis = 'l', labels=c("A","","","B","",""), label_size=18, rel_heights = c(1.2, 0.4,1.3,1,0.4,1))
dataGO_MF$shortName <- factor(dataGO_MF$shortName, levels=rev(c("Sequence-specific DNA binding", "RNA polymerase II transcription", "GTPase activator", "Nucleic acid binding" , "Ion binding", "Transcription regulatory region DNA binding","Transmembrane transporter activty"  , "Transcription factor activity"       )))
GO_MF_plot <-ggplot(dataGO_MF, aes(y=enrichmentScore, x=shortName)) + geom_col(aes(fill=type),alpha=0.7) + coord_flip() + facet_grid(classification~ tissue, scales = "free", space = "free") + labs(x="", y = "Enrichment score", fill="Annotation cluster") + theme_Publication() + geom_text(aes(label = nGenes), hjust = 0, size=5)  + scale_fill_manual(values=color_map_mf) +
theme(axis.text = element_text( size = 16)) + scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) + guides(fill="none")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme (axis.line.x = element_line(color = "white",
size = 1, linetype = "solid"))
GO_MF_plot
plot_grid(GO_BP_plot, GO_BP_g1_plot, GO_BP_g2_plot, GO_MF_plot, GO_MF_g1_plot, GO_MF_g2_plot, ncol=1, align = 'v', axis = 'l', labels=c("A","","","B","",""), label_size=18, rel_heights = c(1.2, 0.4,1.3,1,0.4,1))
ggsave("Figure6_3.png", height = 12, width = 13)
ggsave("Figure6_3.pdf", height = 12, width = 13)
getwd()
save.image("/run/user/1000/gvfs/sftp:host=marvin.s.upf.edu,user=mcoronado/gpfs42/robbyfs/homes/users/mcoronado/scratch/5GenomesProject/ANALYSES/trinity-repeatMasker/FIGURES/Figure6/Figure6_all_2.RData")
prop.test(x=c(98,82),n=c(111,111))
prop.test(x=c(1233.4,82),n=c(2012.6,111))
prop.test(x=c(1233.4,90),n=c(2012.6,111))
load("/run/user/1000/gvfs/sftp:host=marvin.s.upf.edu,user=mcoronado/gpfs42/robbyfs/homes/users/mcoronado/scratch/5GenomesProject/ANALYSES/trinity-repeatMasker/FIGURES/Figure4/Figure4_2.RData")
p1_120
occurrencesTE
TE_chim_global_TE_commonTE <- unique(TE_chim_global_TE[,c("FlyBaseGeneRef", "TEfamily")])
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE$Var1<-as.character(occurrencesTE$Var1)
occurrencesTE[occurrencesTE$Freq<15,]$Var1 <- "Others"
occurrencesTE<-aggregate(occurrencesTE$Freq, by=list(Category=occurrencesTE$Var1), FUN=sum)
occurrencesTE$Category <- factor(occurrencesTE$Category, levels=c("roo", "INE-1", "LARD", "P-element", "1360", "Gypsy-2_Dsim", "hopper2", "jockey", "S-element", "Others"))
occurrencesTE<-occurrencesTE %>%
group_by(Category) %>%
mutate(per=x/sum(occurrencesTE$x)) %>%
arrange(desc(Category))
occurrencesTE$label <- scales::percent(occurrencesTE$per)
occurrencesTE$label <- scales::percent(occurrencesTE$per, accuracy = 0.1)
p1<-ggplot(occurrencesTE) + geom_col(width=1, aes(x="",y=per,fill=Category)) + coord_polar("y", start=0) +
theme_void() + scale_fill_manual(values=color_map_families) + geom_label_repel(aes(x="",y= cumsum(per) - per/2,label = label), size=4, show.legend = F, max.overlaps = 15, nudge_x = 0.1)  +  theme(plot.title = element_text(face = "bold")) +
theme(plot.title = element_text(hjust = 0.5)) + labs(fill="TE family")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))
TE_chim_global_TE_commonTE <- unique(TE_chim_global_TE[,c("FlyBaseGeneRef", "TEfamily")])
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE$Var1<-as.character(occurrencesTE$Var1)
occurrencesTE[occurrencesTE$Freq<15,]$Var1 <- "Others"
occurrencesTE<-aggregate(occurrencesTE$Freq, by=list(Category=occurrencesTE$Var1), FUN=sum)
occurrencesTE$Category <- factor(occurrencesTE$Category, levels=c("roo", "INE-1", "LARD", "P-element", "1360", "Gypsy-2_Dsim", "hopper2", "jockey", "S-element", "Others"))
occurrencesTE<-occurrencesTE %>%
group_by(Category) %>%
mutate(per=x/sum(occurrencesTE$x)) %>%
arrange(desc(Category))
occurrencesTE$label <- scales::percent(occurrencesTE$per)
occurrencesTE$label <- scales::percent(occurrencesTE$per, accuracy = 0.1)
p1<-ggplot(occurrencesTE) + geom_col(width=1, aes(x="",y=per,fill=Category)) + coord_polar("y", start=0) +
theme_void() + scale_fill_manual(values=color_map_families) + geom_label_repel(aes(x="",y= cumsum(per) - per/2,label = label), size=4, show.legend = F, max.overlaps = 15, nudge_x = 0.1)  +  theme(plot.title = element_text(face = "bold")) +
theme(plot.title = element_text(hjust = 0.5)) + labs(fill="TE family")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))
library(ggrepel)
occurrencesTE
p1<-ggplot(occurrencesTE) + geom_col(width=1, aes(x="",y=per,fill=Category)) + coord_polar("y", start=0) +
theme_void() + scale_fill_manual(values=color_map_families) + geom_label_repel(aes(x="",y= cumsum(per) - per/2,label = label), size=4, show.legend = F, max.overlaps = 15, nudge_x = 0.1)  +  theme(plot.title = element_text(face = "bold")) +
theme(plot.title = element_text(hjust = 0.5)) + labs(fill="TE family")  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))
p1
occurrencesTE
View(occurrencesTE)
write.table(occurrencesTE, file = "~/Desktop/all.tab", quote = F, row.names = F, col.names = F, sep = "\t")
TE_chim_global_TE_g1 <- TE_chim_global_TE[TE_chim_global_TE$group==1,]
TE_chim_global_TE_commonTE <- unique(TE_chim_global_TE_g1[,c("FlyBaseGeneRef", "TEfamily")])
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE$Var1<-as.character(occurrencesTE$Var1)
occurrencesTE[occurrencesTE$Freq<15,]$Var1 <- "Others"
occurrencesTE<-aggregate(occurrencesTE$Freq, by=list(Category=occurrencesTE$Var1), FUN=sum)
occurrencesTE$Category <- factor(occurrencesTE$Category, levels=c( "INE-1", "roo",  "P-element", "LARD", "1360",   "S-element", "Gypsy-2_Dsim", "Others"))
occurrencesTE<-occurrencesTE %>%
group_by(Category) %>%
mutate(per=x/sum(occurrencesTE$x)) %>%
arrange(desc(Category))
occurrencesTE$label <- scales::percent(occurrencesTE$per)
occurrencesTE$label <- scales::percent(occurrencesTE$per, accuracy = 0.1)
write.table(occurrencesTE, file = "~/Desktop/g1.tab", quote = F, row.names = F, col.names = F, sep = "\t")
occurrencesTE
rev(occurrencesTE)
TE_chim_global_TE_g2 <- TE_chim_global_TE[TE_chim_global_TE$group==2,]
TE_chim_global_TE_commonTE <- unique(TE_chim_global_TE_g2[,c("FlyBaseGeneRef", "TEfamily")])
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE$Var1<-as.character(occurrencesTE$Var1)
occurrencesTE[occurrencesTE$Freq<15,]$Var1 <- "Others"
occurrencesTE<-aggregate(occurrencesTE$Freq, by=list(Category=occurrencesTE$Var1), FUN=sum)
occurrencesTE$Category <- factor(occurrencesTE$Category, levels=c(  "roo",  "INE-1","LARD", "hopper2", "Others"))
occurrencesTE<-occurrencesTE %>%
group_by(Category) %>%
mutate(per=x/sum(occurrencesTE$x)) %>%
arrange(desc(Category))
occurrencesTE$label <- scales::percent(occurrencesTE$per)
occurrencesTE$label <- scales::percent(occurrencesTE$per, accuracy = 0.1)
write.table(occurrencesTE, file = "~/Desktop/g2.tab", quote = F, row.names = F, col.names = F, sep = "\t")
TE_chim_global_TE_120 <- TE_chim_global_TE[TE_chim_global_TE$lengthTE>=120,]
TE_chim_global_TE_commonTE <- unique(TE_chim_global_TE_120[,c("FlyBaseGeneRef", "TEfamily")])
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE$Var1<-as.character(occurrencesTE$Var1)
occurrencesTE[occurrencesTE$Freq<15,]$Var1 <- "Others"
occurrencesTE<-aggregate(occurrencesTE$Freq, by=list(Category=occurrencesTE$Var1), FUN=sum)
occurrencesTE$Category <- factor(occurrencesTE$Category, levels=c(   "INE-1", "roo",  "LARD", "P-element", "1360", "Gypsy-2_Dsim", "S-element","jockey", "Others"))
occurrencesTE<-occurrencesTE %>%
group_by(Category) %>%
mutate(per=x/sum(occurrencesTE$x)) %>%
arrange(desc(Category))
occurrencesTE$label <- scales::percent(occurrencesTE$per)
occurrencesTE$label <- scales::percent(occurrencesTE$per, accuracy = 0.1)
write.table(occurrencesTE, file = "~/Desktop/all_120.tab", quote = F, row.names = F, col.names = F, sep = "\t")
TE_chim_global_TE_g1_120 <- TE_chim_global_TE[TE_chim_global_TE$group==1 & TE_chim_global_TE$lengthTE>=120,]
TE_chim_global_TE_commonTE <- unique(TE_chim_global_TE_g1_120[,c("FlyBaseGeneRef", "TEfamily")])
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE$Var1<-as.character(occurrencesTE$Var1)
occurrencesTE[occurrencesTE$Freq<15,]$Var1 <- "Others"
occurrencesTE<-aggregate(occurrencesTE$Freq, by=list(Category=occurrencesTE$Var1), FUN=sum)
occurrencesTE$Category <- factor(occurrencesTE$Category, levels=c(   "INE-1", "roo",  "P-element",  "LARD", "1360", "Gypsy-2_Dsim", "S-element", "Others"))
occurrencesTE<-occurrencesTE %>%
group_by(Category) %>%
mutate(per=x/sum(occurrencesTE$x)) %>%
arrange(desc(Category))
occurrencesTE$label <- scales::percent(occurrencesTE$per)
occurrencesTE$label <- scales::percent(occurrencesTE$per, accuracy = 0.1)
write.table(occurrencesTE, file = "~/Desktop/g1_120.tab", quote = F, row.names = F, col.names = F, sep = "\t")
TE_chim_global_TE_g2_120 <- TE_chim_global_TE[TE_chim_global_TE$group==2 & TE_chim_global_TE$lengthTE>=120,]
TE_chim_global_TE_commonTE <- unique(TE_chim_global_TE_g2_120[,c("FlyBaseGeneRef", "TEfamily")])
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE<-as.data.frame(table(TE_chim_global_TE_commonTE$TEfamily))
ggplot(occurrencesTE, aes(x=Var1,y=Freq)) + geom_col()
occurrencesTE$Var1<-as.character(occurrencesTE$Var1)
occurrencesTE[occurrencesTE$Freq<15,]$Var1 <- "Others"
occurrencesTE<-aggregate(occurrencesTE$Freq, by=list(Category=occurrencesTE$Var1), FUN=sum)
occurrencesTE$Category <- factor(occurrencesTE$Category, levels=c(   "roo",  "INE-1",  "LARD", "Others"))
occurrencesTE<-occurrencesTE %>%
group_by(Category) %>%
mutate(per=x/sum(occurrencesTE$x)) %>%
arrange(desc(Category))
occurrencesTE$label <- scales::percent(occurrencesTE$per)
occurrencesTE$label <- scales::percent(occurrencesTE$per, accuracy = 0.1)
write.table(occurrencesTE, file = "~/Desktop/g2_120.tab", quote = F, row.names = F, col.names = F, sep = "\t")
setwd("/run/user/1000/gvfs/sftp:host=marvin.s.upf.edu,user=mcoronado/gpfs42/robbyfs/homes/users/mcoronado/scratch/5GenomesProject/ANALYSES/trinity-repeatMasker/resultsChimAnalysis/salmonExpressionAnalysis")
df.expression
df.expression
countSamplesStatusTranscripts_gut
TE_chim_global$nExon
min(TE_chim_global$nExon)
load("/run/user/1000/gvfs/sftp:host=marvin.s.upf.edu,user=mcoronado/gpfs42/robbyfs/homes/users/mcoronado/scratch/5GenomesProject/ANALYSES/trinity-repeatMasker/FIGURES/Figure1/Figure1CD.RData")
data
ggplot(data[data$type=="Total transcriptome" & data$variable=="differenceTotalTranscripts" | data$variable=="totalChimerics",], aes(x=genome, y=value, fill=variable)) + geom_col(position="fill")
ggplot(data, aes(x=genome, y=value, fill=type)) + geom_col() + facet_grid(.~class, scale="free") +
geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#c90808","#c9c9c9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16), strip.text.x = element_text(size = 16), strip.background =element_rect(fill="white", color="white"))
data[data$class=="Body-part specific",]$class<-"Body-part specific transcriptome"
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_grid(.~class, scale="free") +
geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16), strip.text.x = element_text(size = 16), strip.background =element_rect(fill="white", color="white"))
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_grid(.~class, scale="free", cols = 1) +
geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16), strip.text.x = element_text(size = 16), strip.background =element_rect(fill="white", color="white"))
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_grid(class~., scale="free") +
geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16), strip.text.x = element_text(size = 16), strip.background =element_rect(fill="white", color="white"))
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_grid(.~class, scale="free", cols = 1) +
geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16), strip.text.x = element_text(size = 16), strip.background =element_rect(fill="white", color="white"))
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_grid(.~class, scale="free") +
geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16), strip.text.x = element_text(size = 16), strip.background =element_rect(fill="white", color="white"))
ggsave("figureB_2.png", width = 6, height = 4)
getwd()
setwd("/run/user/1000/gvfs/sftp:host=marvin.s.upf.edu,user=mcoronado/gpfs42/robbyfs/homes/users/mcoronado/scratch/5GenomesProject/ANALYSES/trinity-repeatMasker/resultsChimAnalysis/analysisTissueSpecific")
ggsave("figureB_2.png", width = 6, height = 4)
ggsave("figureB_2.png", width = 7, height = 8)
ggsave("figureB_2.png", width = 10, height = 8)
ggsave("figureB_2.png", width = 10, height = 8.5)
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_wrap(.~class, scale="free") +   geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16), strip.text.x = element_text(size = 16), strip.background =element_rect(fill="white", color="white"))
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_wrap(.~class, scale="free", ncol = 1) +   geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16), strip.text.x = element_text(size = 16), strip.background =element_rect(fill="white", color="white"))
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_wrap(.~class, scale="free", ncol = 1) +   geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16), strip.text.x = element_text(size = 16), strip.background =element_rect(fill="white", color="white"))
ggsave("figureB_2.png", width = 10, height = 8.5)
ggsave("figureB_2.png", width = 10, height = 12)
ggsave("figureB_2.png", width = 8.5, height = 10)
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_wrap(.~class, scale="free", ncol = 1) +   geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16), strip.text.x = element_text(size = 16), strip.background =element_rect(fill="white", color="white"))
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_wrap(.~class, scale="free", ncol = 1) +   geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 20)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16), strip.text.x = element_text(size = 20), strip.background =element_rect(fill="white", color="white"))
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_wrap(.~class, scale="free", ncol = 1) +   geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 20)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=20), plot.title = element_text(size = 20), strip.text.x = element_text(size = 20), strip.background =element_rect(fill="white", color="white"))
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_wrap(.~class, scale="free", ncol = 1) +   geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 20)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=20), plot.title = element_text(size = 20), strip.text.x = element_text(size = 22), strip.background =element_rect(fill="white", color="white"))
ggsave("figureB_2.png", width = 8.5, height = 10)
ggplot(data[data$class!="Shared across 3 body-parts"], aes(x=genome, y=value, fill=type)) + geom_col() + facet_wrap(.~class, scale="free", ncol = 1) +   geom_text(aes(label = percentageTotaltranscriptome, y = yPos),  hjust = 1.1, size = 5) + coord_flip() + scale_fill_manual(values=c("#D51410","#f2dba9"), guide="none") +  labs(y="Number of transcripts", x="") + theme_Publication() + theme(axis.text = element_text( size = 24)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=24), plot.title = element_text(size = 24), strip.text.x = element_text(size = 26), strip.background =element_rect(fill="white", color="white"))
ggsave("figureB_2.png", width = 8.5, height = 10)
load("/run/user/1000/gvfs/sftp:host=marvin.s.upf.edu,user=mcoronado/gpfs42/robbyfs/homes/users/mcoronado/scratch/5GenomesProject/ANALYSES/trinity-repeatMasker/FIGURES/FigureS1/FigureS1.RData")
ggplot(epigResults[epigResults$change=="Loss of H3K27ac" | epigResults$change=="Loss of H3K9me3" | epigResults$change=="Gain of H3K27ac" | epigResults$change=="Gain of H3K9me3" | epigResults$change=="Gain of both",], aes(x=TEpresence, y =log2(avgExpr))) + geom_boxplot(aes(fill=TEpresence)) + facet_grid(.~change) + coord_flip() +
theme_Publication() + labs(y=expression(log[2](TMM)),x="",fill="") +  theme(panel.border = element_blank(), panel.grid.major = element_blank(),  panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + scale_fill_manual(values=c("gray80", "firebrick3"), labels = c("Transcripts TE(-)","Transcripts TE(+)"))  + theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +   scale_x_discrete(limits=rev)  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))
figS2<-ggplot(epigResults[epigResults$change=="Loss of H3K27ac" | epigResults$change=="Loss of H3K9me3" | epigResults$change=="Gain of H3K27ac" | epigResults$change=="Gain of H3K9me3" | epigResults$change=="Gain of both",], aes(x=TEpresence, y =log2(avgExpr))) + geom_boxplot(aes(fill=TEpresence)) + facet_grid(.~change) + coord_flip() +
theme_Publication() + labs(y=expression(log[2](TMM)),x="",fill="") +  theme(panel.border = element_blank(), panel.grid.major = element_blank(),  panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + scale_fill_manual(values=c("gray80", "firebrick3"), labels = c("Transcripts TE(-)","Transcripts TE(+)"))  + theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +   scale_x_discrete(limits=rev)  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text(size=16), plot.title = element_text(size = 16))
ggsave(filename = "FigureS1_forTable.png", figS2, width = 7, height = 3)
setwd("/run/user/1000/gvfs/sftp:host=marvin.s.upf.edu,user=mcoronado/gpfs42/robbyfs/homes/users/mcoronado/scratch/5GenomesProject/ANALYSES/trinity-repeatMasker/FIGURES/FigureS1")
ggsave(filename = "FigureS1_forTable.png", figS2, width = 7, height = 3)
ggsave(filename = "FigureS1_forTable.png", figS2, width 9 7, height = 3)
ggsave(filename = "FigureS1_forTable.png", figS2, width = 9, height = 3)
save.image("/run/user/1000/gvfs/sftp:host=marvin.s.upf.edu,user=mcoronado/gpfs42/robbyfs/homes/users/mcoronado/scratch/5GenomesProject/ANALYSES/trinity-repeatMasker/FIGURES/dataFigures.RData")
savehistory("/run/user/1000/gvfs/sftp:host=marvin.s.upf.edu,user=mcoronado/gpfs42/robbyfs/homes/users/mcoronado/scratch/5GenomesProject/ANALYSES/trinity-repeatMasker/FIGURES/FigureS1/historyFigures.Rhistory")
